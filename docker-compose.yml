services:
  django-api:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    container_name: django-api
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
        - .:/app
    depends_on:
      - db
      - redis
      - rabbitmq

  celery:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    container_name: celery
    environment:
      - CELERY_WORKER_TYPE=worker
    entrypoint: /app/docker/celery/celery-entrypoint.sh
    depends_on:
      - django-api
      - rabbitmq
    env_file:
      - .env
    volumes:
      - .:/app
    restart: always

  celery-beat:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    container_name: celery-beat
    environment:
      - CELERY_WORKER_TYPE=beat
    entrypoint: /app/docker/celery/celery-entrypoint.sh
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - celery
      - db
    restart: always

  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    ports:
      - "5555:5555"
    depends_on:
      - rabbitmq
    restart: always

  db:
    image: postgres:16
    container_name: postgres
    restart: 'always'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  nginx:
    image: nginx:stable
    container_name: nginx
    restart: always
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - django-api

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: always

  redis:
     image: redis:8-alpine
     ports:
       - "6379:6379"
     restart: always

volumes:
  postgres_data:
  rabbitmq_data:
